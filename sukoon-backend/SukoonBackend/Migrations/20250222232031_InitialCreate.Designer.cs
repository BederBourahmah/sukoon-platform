// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SukoonBackend.Data;

#nullable disable

namespace SukoonBackend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250222232031_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 2, 22, 23, 20, 30, 583, DateTimeKind.Utc).AddTicks(9330),
                            Name = "User",
                            UpdatedAt = new DateTime(2025, 2, 22, 23, 20, 30, 583, DateTimeKind.Utc).AddTicks(9460)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 2, 22, 23, 20, 30, 584, DateTimeKind.Utc).AddTicks(476),
                            Name = "Admin",
                            UpdatedAt = new DateTime(2025, 2, 22, 23, 20, 30, 584, DateTimeKind.Utc).AddTicks(478)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 2, 22, 23, 20, 30, 584, DateTimeKind.Utc).AddTicks(480),
                            Name = "Borrower",
                            UpdatedAt = new DateTime(2025, 2, 22, 23, 20, 30, 584, DateTimeKind.Utc).AddTicks(480)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 2, 22, 23, 20, 30, 584, DateTimeKind.Utc).AddTicks(482),
                            Name = "Lender",
                            UpdatedAt = new DateTime(2025, 2, 22, 23, 20, 30, 584, DateTimeKind.Utc).AddTicks(482)
                        });
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.Property<int>("RolesId")
                        .HasColumnType("integer");

                    b.Property<int>("UsersId")
                        .HasColumnType("integer");

                    b.HasKey("RolesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("RoleUser");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.HasOne("Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
